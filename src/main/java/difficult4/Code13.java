package difficult4;

import java.util.Arrays;
import java.util.List;

/**
 * @Author ayl
 * @Date 2025-09-30
 * 1301. 最大得分的路径数目
 * 算术评级: 6
 * 第 16 场双周赛
 * Q4
 * 同步题目状态
 * <p>
 * 1853
 * 相关标签
 * premium lock icon
 * 相关企业
 * 提示
 * 给你一个正方形字符数组 board ，你从数组最右下方的字符 'S' 出发。
 * <p>
 * 你的目标是到达数组最左上角的字符 'E' ，数组剩余的部分为数字字符 1, 2, ..., 9 或者障碍 'X'。在每一步移动中，你可以向上、向左或者左上方移动，可以移动的前提是到达的格子没有障碍。
 * <p>
 * 一条路径的 「得分」 定义为：路径上所有数字的和。
 * <p>
 * 请你返回一个列表，包含两个整数：第一个整数是 「得分」 的最大值，第二个整数是得到最大得分的方案数，请把结果对 10^9 + 7 取余。
 * <p>
 * 如果没有任何路径可以到达终点，请返回 [0, 0] 。
 * <p>
 * <p>
 * <p>
 * 示例 1：
 * <p>
 * 输入：board = ["E23","2X2","12S"]
 * 输出：[7,1]
 * 示例 2：
 * <p>
 * 输入：board = ["E12","1X1","21S"]
 * 输出：[4,2]
 * 示例 3：
 * <p>
 * 输入：board = ["E11","XXX","11S"]
 * 输出：[0,0]
 * <p>
 * <p>
 * 提示：
 * <p>
 * 2 <= board.length == board[i].length <= 100
 */
public class Code13 {

    public int[] pathsWithMaxScore(List<String> board) {
        //动态规划
        int[][] arr = new int[board.size()][board.get(0).length()];
        int[][] countArr = new int[board.size()][board.get(0).length()];
        //循环
        for (int i = arr.length - 1; i >= 0; i--) {
            //循环2
            for (int j = arr[0].length - 1; j >= 0; j--) {
                //本节点字符
                char letter = board.get(i).charAt(j);
                //如果是障碍
                if (letter == 'X') {
                    //本轮过
                    continue;
                }
                //两个方向
                int down = getArr(arr, i + 1, j);
                int right = getArr(arr, i, j + 1);
                int downRight = getArr(arr, i + 1, j + 1);
                //该位置最大结果,固定自己
                int sum = getNumber(board, i, j);
                //数量
                int maxCount = 0;
                int maxSum = 0;

                //如果更大
                if (down > maxSum) {
                    //更新
                    maxCount = getArr(countArr, i + 1, j);
                    maxSum = down;
                } else if (down == maxSum) {
                    //叠加
                    maxCount = (maxCount + getArr(countArr, i + 1, j)) % 1000000007;
                }
                //如果更大
                if (right > maxSum) {
                    //更新
                    maxCount = getArr(countArr, i, j + 1);
                    maxSum = right;
                } else if (right == maxSum) {
                    //叠加
                    maxCount = (maxCount + getArr(countArr, i, j + 1)) % 1000000007;
                }
                //如果更大
                if (downRight > maxSum) {
                    //更新
                    maxCount = getArr(countArr, i + 1, j + 1);
                    maxSum = downRight;
                } else if (downRight == maxSum) {
                    //叠加
                    maxCount = (maxCount + getArr(countArr, i + 1, j + 1)) % 1000000007;
                }

                //叠加
                arr[i][j] = sum + maxSum;
                //如果第一次
                if (i + 1 == countArr.length && j + 1 == countArr[0].length) {
                    //默认
                    countArr[i][j] = 1;
                } else {
                    //计算
                    countArr[i][j] = maxCount;
                }
            }
        }
        //如果有结果
        if (countArr[0][0] > 0) {
            //返回
            return new int[]{arr[0][0], countArr[0][0]};
        }
        //默认
        return new int[]{0, 0};
    }

    //获取数组内容
    private int getNumber(List<String> board, int x, int y) {
        //如果越界
        if (x < 0 || y < 0 || x >= board.size() || y >= board.get(0).length()) {
            //过
            return 0;
        }
        //获取字符串,转为数字
        int number = board.get(x).charAt(y) - '0';
        //如果是数字
        if (number >= 0 && number <= 9) {
            //返回
            return number;
        }
        //默认
        return 0;
    }

    //获取数组内容
    private int getArr(int[][] arr, int x, int y) {
        //如果越界
        if (x < 0 || y < 0 || x >= arr.length || y >= arr[0].length) {
            //过
            return 0;
        }
        //返回
        return arr[x][y];
    }

    public static void main(String[] args) {
        int[] e23s = new Code13().pathsWithMaxScore(Arrays.asList(

        ));
        System.out.println();
    }

}
